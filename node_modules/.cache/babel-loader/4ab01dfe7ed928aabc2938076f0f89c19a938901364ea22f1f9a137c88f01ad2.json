{"ast":null,"code":"import{useState}from\"react\";import{FirebaseProvider,db,storage,useFirebase}from\"../context/Firebase\";import\"./dummy_inbox.css\";import'firebase/storage';import{getDownloadURL,ref,uploadBytes}from\"firebase/storage\";import Submit from\"../admin/components/Submit\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Dummyinbox(){const[Post_textarea,setPost_textarea]=useState(\"\");const TxtChange=event=>{setPost_textarea(event.target.value);};const[Post_txtTitle,setPost_txtTile]=useState(\"\");const TxtTitle=event=>{setPost_txtTile(event.target.value);};const[ImgUpload,setImgUpload]=useState([]);const[uploadstatus,setuploadstatus]=useState(false);const[uploadno,setuploadno]=useState('');const[lengths,setlength]=useState('');let URLS='';const firebase=useFirebase();const postDatas=async()=>{let currentDate=new Date();let monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];let monthIndex=currentDate.getMonth();let monthName=monthNames[monthIndex];let day=currentDate.getDate();let year=currentDate.getFullYear();day=day<10?'0'+day:day;let formattedDate=\"\".concat(day,\" \").concat(monthName,\" \").concat(year.toString().slice(-2));let time=Date.now();if((Post_txtTitle||Post_textarea)===''||ImgUpload.length===0){alert(\"Please Fill all \");if(window.confirm){window.location.reload();}}else{setlength(ImgUpload.length);for(let i=0;i<ImgUpload.length;i++){setuploadno(i+1);const imgref=ref(storage,\"post/\".concat(time,\"/\").concat(ImgUpload[i].name));await uploadBytes(imgref,ImgUpload[i])//For uploading (kuta upload,kai upload)\n.then(async snapshot=>{//  \"snapshot\" tyat sagala astay [items,prefixes,extra]\nawait getDownloadURL(snapshot.ref)//url download karaylo ref cha, ref kai ahe tar \"ImageUrls/\"\n.then(url=>{//snapshot madla url\nURLS+=url+'>>>';});});}firebase.putData(\"post/\".concat(time),{description:Post_textarea,imglist:URLS,postuploadedon:formattedDate,title:Post_txtTitle});}};const status=()=>{setuploadstatus(!uploadstatus);};const posthandler=()=>{postDatas();status();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"postUpload_body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"postUpload_container\",children:[/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Type Title\",value:Post_txtTitle,onChange:TxtTitle,className:\"postUpload_title\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Type here\",value:Post_textarea,onChange:TxtChange,className:\"postUpload_textarea\",children:\" \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"postUploadBrowse\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"postUpload_img\",src:\"./tabler_photo-up.svg\",alt:\"/\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,onChange:event=>{setImgUpload(event.target.files);}}),/*#__PURE__*/_jsx(\"button\",{className:\"postUploadbtn\",onClick:posthandler,children:\"Post\"})]}),uploadstatus&&/*#__PURE__*/_jsx(\"div\",{children:uploadno<=lengths?/*#__PURE__*/_jsxs(\"p\",{children:[\"Uploaded...\",uploadno,\"/\",lengths]}):/*#__PURE__*/_jsx(\"p\",{children:\"Uploaded All\"})})]})})});}","map":{"version":3,"names":["useState","FirebaseProvider","db","storage","useFirebase","getDownloadURL","ref","uploadBytes","Submit","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dummyinbox","Post_textarea","setPost_textarea","TxtChange","event","target","value","Post_txtTitle","setPost_txtTile","TxtTitle","ImgUpload","setImgUpload","uploadstatus","setuploadstatus","uploadno","setuploadno","lengths","setlength","URLS","firebase","postDatas","currentDate","Date","monthNames","monthIndex","getMonth","monthName","day","getDate","year","getFullYear","formattedDate","concat","toString","slice","time","now","length","alert","window","confirm","location","reload","i","imgref","name","then","snapshot","url","putData","description","imglist","postuploadedon","title","status","posthandler","children","className","placeholder","onChange","src","alt","type","multiple","files","onClick"],"sources":["F:/Coding crafters/coding-crafters/src/components/Inbox.jsx"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport { FirebaseProvider, db, storage, useFirebase } from \"../context/Firebase\";\r\nimport \"./dummy_inbox.css\";\r\nimport 'firebase/storage';\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\"\r\nimport Submit from \"../admin/components/Submit\";\r\n\r\nexport default function Dummyinbox() {\r\n\r\n  const [Post_textarea, setPost_textarea] = useState(\"\");\r\n  const TxtChange = (event) => {\r\n    setPost_textarea(event.target.value);\r\n  };\r\n\r\n  const [Post_txtTitle, setPost_txtTile] = useState(\"\");\r\n  const TxtTitle = (event) => {\r\n    setPost_txtTile(event.target.value);\r\n  };\r\n\r\n  const [ImgUpload, setImgUpload] = useState([])\r\n  const [uploadstatus, setuploadstatus] = useState(false)\r\n  const [uploadno, setuploadno] = useState('')\r\n  const [lengths, setlength] = useState('')\r\n  let URLS = ''\r\n  const firebase = useFirebase();\r\n\r\n\r\n  const postDatas = async () => {\r\n    let currentDate = new Date();\r\n    let monthNames = [\r\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n    let monthIndex = currentDate.getMonth();\r\n    let monthName = monthNames[monthIndex];\r\n    let day = currentDate.getDate();\r\n    let year = currentDate.getFullYear();\r\n    day = day < 10 ? '0' + day : day;\r\n    let formattedDate = `${day} ${monthName} ${year.toString().slice(-2)}`;\r\n    let time = Date.now();\r\n\r\n    if (((Post_txtTitle || Post_textarea) === '') || (ImgUpload.length === 0)) {\r\n      alert(\"Please Fill all \");\r\n      if (window.confirm) {\r\n        window.location.reload()\r\n      }\r\n    } else {\r\n      setlength(ImgUpload.length)\r\n\r\n      for (let i = 0; i < ImgUpload.length; i++) {\r\n        setuploadno(i + 1)\r\n        const imgref = ref(storage, `post/${time}/${ImgUpload[i].name}`)\r\n        await uploadBytes(imgref, ImgUpload[i])//For uploading (kuta upload,kai upload)\r\n          .then(async (snapshot) => {//  \"snapshot\" tyat sagala astay [items,prefixes,extra]\r\n            await getDownloadURL(snapshot.ref)//url download karaylo ref cha, ref kai ahe tar \"ImageUrls/\"\r\n              .then((url) => {//snapshot madla url\r\n                URLS += url + '>>>'\r\n              })\r\n          });\r\n      }\r\n      firebase.putData(`post/${time}`, {\r\n        description: Post_textarea,\r\n        imglist: URLS,\r\n        postuploadedon: formattedDate,\r\n        title: Post_txtTitle\r\n      })\r\n    }\r\n  }\r\n\r\n  const status = () => {\r\n    setuploadstatus(!uploadstatus)\r\n  }\r\n  const posthandler = () => {\r\n    postDatas();\r\n    status()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postUpload_body\">\r\n        <div className=\"postUpload_container\">\r\n          <textarea\r\n            placeholder=\"Type Title\"\r\n            value={Post_txtTitle}\r\n            onChange={TxtTitle}\r\n            className=\"postUpload_title\"\r\n          ></textarea>\r\n          <textarea\r\n            placeholder=\"Type here\"\r\n            value={Post_textarea}\r\n            onChange={TxtChange}\r\n            className=\"postUpload_textarea\"\r\n          >\r\n            {\" \"}\r\n          </textarea>\r\n          <div className=\"postUploadBrowse\">\r\n            <img\r\n              className=\"postUpload_img\"\r\n              src=\"./tabler_photo-up.svg\"\r\n              alt=\"/\"\r\n            />\r\n            <input type=\"file\" multiple onChange={(event) => { setImgUpload(event.target.files) }} />\r\n            <button className=\"postUploadbtn\" onClick={posthandler}>\r\n              Post\r\n            </button>\r\n          </div>\r\n          {uploadstatus && (\r\n            <div>\r\n              {uploadno <= lengths ? (\r\n                <p>Uploaded...{uploadno}/{lengths}</p>\r\n              ) : (\r\n                <p>Uploaded All</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}