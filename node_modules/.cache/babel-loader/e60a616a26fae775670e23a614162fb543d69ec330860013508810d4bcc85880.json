{"ast":null,"code":"var _jsxFileName = \"F:\\\\Coding crafters\\\\coding-crafters\\\\src\\\\components\\\\Inbox.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { FirebaseProvider, db, storage, useFirebase } from \"../context/Firebase\";\nimport \"./dummy_inbox.css\";\nimport 'firebase/storage';\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport Submit from \"../admin/components/Submit\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dummyinbox() {\n  _s();\n  const [Post_textarea, setPost_textarea] = useState(\"\");\n  const TxtChange = event => {\n    setPost_textarea(event.target.value);\n  };\n  const [Post_txtTitle, setPost_txtTile] = useState(\"\");\n  const TxtTitle = event => {\n    setPost_txtTile(event.target.value);\n  };\n  const [ImgUpload, setImgUpload] = useState([]);\n  const [uploadstatus, setuploadstatus] = useState(false);\n  const [uploadno, setuploadno] = useState('');\n  const [lengths, setlength] = useState('');\n  let URLS = '';\n  const firebase = useFirebase();\n  const postDatas = async () => {\n    let currentDate = new Date();\n    let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let monthIndex = currentDate.getMonth();\n    let monthName = monthNames[monthIndex];\n    let day = currentDate.getDate();\n    let year = currentDate.getFullYear();\n    day = day < 10 ? '0' + day : day;\n    let formattedDate = `${day} ${monthName} ${year.toString().slice(-2)}`;\n    let time = Date.now();\n    if ((Post_txtTitle || Post_textarea) === '' || ImgUpload.length === 0) {\n      alert(\"Please Fill all \");\n      if (window.confirm) {\n        window.location.reload();\n      }\n    } else {\n      setlength(ImgUpload.length);\n      for (let i = 0; i < ImgUpload.length; i++) {\n        setuploadno(i + 1);\n        const imgref = ref(storage, `post/${time}/${ImgUpload[i].name}`);\n        await uploadBytes(imgref, ImgUpload[i]) //For uploading (kuta upload,kai upload)\n        .then(async snapshot => {\n          //  \"snapshot\" tyat sagala astay [items,prefixes,extra]\n          await getDownloadURL(snapshot.ref) //url download karaylo ref cha, ref kai ahe tar \"ImageUrls/\"\n          .then(url => {\n            //snapshot madla url\n            URLS += url + '>>>';\n          });\n        });\n      }\n      firebase.putData(`post/${time}`, {\n        description: Post_textarea,\n        imglist: URLS,\n        postuploadedon: formattedDate,\n        title: Post_txtTitle\n      });\n    }\n  };\n  const status = () => {\n    setuploadstatus(!uploadstatus);\n  };\n  const posthandler = () => {\n    postDatas();\n    status();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Submit, {\n      inbox: [Post_txtTitle, TxtTitle, Post_textarea, TxtChange]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postUpload_body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postUpload_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type Title\",\n          value: Post_txtTitle,\n          onChange: TxtTitle,\n          className: \"postUpload_title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type here\",\n          value: Post_textarea,\n          onChange: TxtChange,\n          className: \"postUpload_textarea\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postUploadBrowse\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"postUpload_img\",\n            src: \"./tabler_photo-up.svg\",\n            alt: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: event => {\n              setImgUpload(event.target.files);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"postUploadbtn\",\n            onClick: posthandler,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), uploadstatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: uploadno <= lengths ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploaded...\", uploadno, \"/\", lengths]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploaded All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dummyinbox, \"lAv2GX/IvSkBvjE8l2tsW3hydQI=\", false, function () {\n  return [useFirebase];\n});\n_c = Dummyinbox;\nvar _c;\n$RefreshReg$(_c, \"Dummyinbox\");","map":{"version":3,"names":["useState","FirebaseProvider","db","storage","useFirebase","getDownloadURL","ref","uploadBytes","Submit","jsxDEV","_jsxDEV","Fragment","_Fragment","Dummyinbox","_s","Post_textarea","setPost_textarea","TxtChange","event","target","value","Post_txtTitle","setPost_txtTile","TxtTitle","ImgUpload","setImgUpload","uploadstatus","setuploadstatus","uploadno","setuploadno","lengths","setlength","URLS","firebase","postDatas","currentDate","Date","monthNames","monthIndex","getMonth","monthName","day","getDate","year","getFullYear","formattedDate","toString","slice","time","now","length","alert","window","confirm","location","reload","i","imgref","name","then","snapshot","url","putData","description","imglist","postuploadedon","title","status","posthandler","children","inbox","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","onChange","src","alt","type","multiple","files","onClick","_c","$RefreshReg$"],"sources":["F:/Coding crafters/coding-crafters/src/components/Inbox.jsx"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\nimport { FirebaseProvider, db, storage, useFirebase } from \"../context/Firebase\";\r\nimport \"./dummy_inbox.css\";\r\nimport 'firebase/storage';\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\"\r\nimport Submit from \"../admin/components/Submit\";\r\n\r\nexport default function Dummyinbox() {\r\n\r\n  const [Post_textarea, setPost_textarea] = useState(\"\");\r\n  const TxtChange = (event) => {\r\n    setPost_textarea(event.target.value);\r\n  };\r\n\r\n  const [Post_txtTitle, setPost_txtTile] = useState(\"\");\r\n  const TxtTitle = (event) => {\r\n    setPost_txtTile(event.target.value);\r\n  };\r\n\r\n  const [ImgUpload, setImgUpload] = useState([])\r\n  const [uploadstatus, setuploadstatus] = useState(false)\r\n  const [uploadno, setuploadno] = useState('')\r\n  const [lengths, setlength] = useState('')\r\n  let URLS = ''\r\n  const firebase = useFirebase();\r\n\r\n\r\n  const postDatas = async () => {\r\n    let currentDate = new Date();\r\n    let monthNames = [\r\n      \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\r\n      \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n    let monthIndex = currentDate.getMonth();\r\n    let monthName = monthNames[monthIndex];\r\n    let day = currentDate.getDate();\r\n    let year = currentDate.getFullYear();\r\n    day = day < 10 ? '0' + day : day;\r\n    let formattedDate = `${day} ${monthName} ${year.toString().slice(-2)}`;\r\n    let time = Date.now();\r\n\r\n    if (((Post_txtTitle || Post_textarea) === '') || (ImgUpload.length === 0)) {\r\n      alert(\"Please Fill all \");\r\n      if (window.confirm) {\r\n        window.location.reload()\r\n      }\r\n    } else {\r\n      setlength(ImgUpload.length)\r\n\r\n      for (let i = 0; i < ImgUpload.length; i++) {\r\n        setuploadno(i + 1)\r\n        const imgref = ref(storage, `post/${time}/${ImgUpload[i].name}`)\r\n        await uploadBytes(imgref, ImgUpload[i])//For uploading (kuta upload,kai upload)\r\n          .then(async (snapshot) => {//  \"snapshot\" tyat sagala astay [items,prefixes,extra]\r\n            await getDownloadURL(snapshot.ref)//url download karaylo ref cha, ref kai ahe tar \"ImageUrls/\"\r\n              .then((url) => {//snapshot madla url\r\n                URLS += url + '>>>'\r\n              })\r\n          });\r\n      }\r\n      firebase.putData(`post/${time}`, {\r\n        description: Post_textarea,\r\n        imglist: URLS,\r\n        postuploadedon: formattedDate,\r\n        title: Post_txtTitle\r\n      })\r\n    }\r\n  }\r\n\r\n  const status = () => {\r\n    setuploadstatus(!uploadstatus)\r\n  }\r\n  const posthandler = () => {\r\n    postDatas();\r\n    status()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Submit inbox={[Post_txtTitle, TxtTitle, Post_textarea, TxtChange]} />\r\n      <div className=\"postUpload_body\">\r\n        <div className=\"postUpload_container\">\r\n          <textarea\r\n            placeholder=\"Type Title\"\r\n            value={Post_txtTitle}\r\n            onChange={TxtTitle}\r\n            className=\"postUpload_title\"\r\n          ></textarea>\r\n          <textarea\r\n            placeholder=\"Type here\"\r\n            value={Post_textarea}\r\n            onChange={TxtChange}\r\n            className=\"postUpload_textarea\"\r\n          >\r\n            {\" \"}\r\n          </textarea>\r\n          <div className=\"postUploadBrowse\">\r\n            <img\r\n              className=\"postUpload_img\"\r\n              src=\"./tabler_photo-up.svg\"\r\n              alt=\"/\"\r\n            />\r\n            <input type=\"file\" multiple onChange={(event) => { setImgUpload(event.target.files) }} />\r\n            <button className=\"postUploadbtn\" onClick={posthandler}>\r\n              Post\r\n            </button>\r\n          </div>\r\n          {uploadstatus && (\r\n            <div>\r\n              {uploadno <= lengths ? (\r\n                <p>Uploaded...{uploadno}/{lengths}</p>\r\n              ) : (\r\n                <p>Uploaded All</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}